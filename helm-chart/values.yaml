# Default values for temporal-bench.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # Build your Maru image based on worker/Dockerfile and put its name and tag below
  repository: ghcr.io/temporalio/maru
  tag: latest
  pullPolicy: IfNotPresent

# Which application workers to run
workers: "bench,basic,basic-act"

tests:
  namespaceName: benchtest
  namespaceRetention: "1"
  frontendAddress: temporaltest-frontend:7233
  prometheusURL: "http://prometheus-server"
  numDecisionPollers: 50
  skipNamespaceCreation: false
  caCertFile: ""
  clientCertFile: ""
  clientCertPrivateKeyFile: ""

  # base-64 equivalents of the above
  caCertData: ""
  clientCertData: ""
  clientCertPrivateKeyData: ""

  enableHostVerification: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

serviceMonitor:
  enabled: false
  interval: 15s

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}
